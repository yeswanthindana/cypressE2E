"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var faker_1 = require("@faker-js/faker");
Cypress.Commands.overwrite('fixture', function (originalFn, filePath, encoding, options) {
    return originalFn(filePath, encoding, options).then(function (fileContent) {
        var fileContentString = JSON.stringify(fileContent);
        var regex = /\${faker\.(.*?)\((.*?)\)}/g;
        var parsedFileContent = fileContentString.replace(regex, parseFaker);
        return JSON.parse(parsedFileContent);
    });
});
function parseFaker(_match, fakerFunction, params) {
    var convertedParams = convertParams(params);
    var functions = fakerFunction.split('.');
    var fakerFunctionReference = faker_1.faker[functions[0]][functions[1]];
    if (convertedParams !== null) {
        return fakerFunctionReference(convertedParams);
    }
    return fakerFunctionReference();
}
function convertParams(params) {
    if (params === '') {
        return null;
    }
    var number = Number(params);
    if (!isNaN(number)) {
        return number;
    }
    if (params.startsWith('[')) {
        var array = JSON.parse(params.replace(/'/g, '"'));
        if (Array.isArray(array)) {
            return array;
        }
    }
    if (params.startsWith('{')) {
        var quotedParams = params.replace(/([{,]\s*)(\w+)\s*:/g, '$1"$2":');
        var object = JSON.parse(quotedParams.replace(/'/g, '"'));
        if (typeof object === 'object') {
            return object;
        }
    }
    return params.replace(/'/g, '');
}
